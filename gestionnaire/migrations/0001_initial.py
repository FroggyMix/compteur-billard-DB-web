# Generated by Django 3.0.4 on 2020-04-03 09:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='JeuVariantes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True)),
                ('nom', models.CharField(max_length=32, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=128)),
                ('regles', models.CharField(blank=True, help_text='Permet de résumer les règles', max_length=512)),
                ('regles_url', models.URLField(blank=True, help_text='Permet de renvoyer vers un site décrivant les règles', unique=True, verbose_name='Lien vers les règles')),
            ],
            options={
                'db_table': 'Jeu_Variantes',
            },
        ),
        migrations.CreateModel(
            name='Joueur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=32)),
                ('prenom', models.CharField(max_length=32)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('d_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name="date d'inscription")),
            ],
            options={
                'db_table': 'Joueur',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_debut_match', models.DateTimeField(default=django.utils.timezone.now)),
                ('d_fin_match', models.DateTimeField(blank=True, null=True)),
                ('jeu_type', models.CharField(choices=[('fr', 'Carambole'), ('sn', 'Snooker'), ('po', 'Pool'), ('us', 'Américain')], default='fr', max_length=2)),
                ('nb_frames', models.SmallIntegerField(default=1, help_text='Nombre de frames à jouer dans ce match')),
                ('scorem_j1', models.SmallIntegerField(blank=True, db_column='scoreM_J1', null=True)),
                ('scorem_j2', models.SmallIntegerField(blank=True, db_column='scoreM_J2', null=True)),
                ('en_cours', models.BooleanField(default='False', help_text='Indique si le match est en cours ou non')),
                ('jeu_variantes', models.ForeignKey(db_column='Jeu_Variantes_id', on_delete=django.db.models.deletion.PROTECT, to='gestionnaire.JeuVariantes')),
                ('joueur1', models.ForeignKey(db_column='joueur1_id', on_delete=django.db.models.deletion.PROTECT, related_name='joueur1', to='gestionnaire.Joueur')),
                ('joueur2', models.ForeignKey(db_column='joueur2_id', on_delete=django.db.models.deletion.PROTECT, related_name='joueur2', to='gestionnaire.Joueur')),
            ],
            options={
                'db_table': 'Match',
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_début', models.DateTimeField(default=django.utils.timezone.now)),
                ('d_fin', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('scoref_j1', models.SmallIntegerField(blank=True, db_column='scoreF_J1', null=True)),
                ('scoref_j2', models.SmallIntegerField(blank=True, db_column='scoreF_J2', null=True)),
                ('score_reprise', models.SmallIntegerField(blank=True, null=True)),
                ('en_cours', models.BooleanField(default='False', help_text='Indique si le match est en cours ou non')),
                ('match', models.ForeignKey(db_column='Match_id', on_delete=django.db.models.deletion.PROTECT, to='gestionnaire.Match')),
            ],
            options={
                'db_table': 'Frame',
            },
        ),
    ]
